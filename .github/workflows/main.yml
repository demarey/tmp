name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events
  push:
    branches:
      - '**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ressources
      
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: pharo-project/pharo-launcher
          ref: debug
          path: pharo-launcher

      # - name: get pharo 90 image
      #   run: | 
      #     curl get.pharo.org/64/90 | bash
      #     ls -R

      # - name: get pharo 68021 (pharo 7.0)
      #   run: | 
      #     wget https://files.pharo.org/get-files/70/pharo64-linux-stable.zip
      #     mkdir vm
      #     cd vm
      #     unzip ../pharo64-linux-stable.zip
      #     cd ..
      #     ls -R

      # - name: image version determination
      #   run: |
      #     pwd
      #     bash -c 'cd "." && export SQUEAK_PLUGINS="" && ./vm/pharo --nodisplay Pharo.image --no-default-preferences ressources/pharo-version.st'
      #     cat pharo.version

      - name: prepare PL image
        run: |
          cd pharo-launcher
          wget --quiet -O - get.pharo.org/64/110 | bash
          wget --quiet -O - get.pharo.org/64/vm110 | bash
          echo '110' > 'pharo.version'
        
          ./pharo Pharo.image save PharoLauncher --delete-old
          ./pharo PharoLauncher.image eval --save "Metacello new baseline: 'PharoLauncher'; repository: 'gitlocal://src'; ignoreImage; onConflictUseIncoming; onWarning: [:ex | ex load]; load"

      - name: run PL tests
        run: |
          cd pharo-launcher
          ./pharo PharoLauncher.image test --junit-xml-output "PharoLauncher.*"

      - uses: actions/upload-artifact@v3  # upload test results
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: test-results
          path: pharo-launcher/*.xml